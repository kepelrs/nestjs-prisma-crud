"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[584],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4405:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_position:2},l="Module Registration",c={unversionedId:"access-control-module/access-control-module",id:"access-control-module/access-control-module",isDocsHomePage:!1,title:"Module Registration",description:"Add .accessControl to your module registration to setup interceptors and other necessary logic for AccessPolicy to work.",source:"@site/docs/access-control-module/access-control-module.md",sourceDirName:"access-control-module",slug:"/access-control-module/access-control-module",permalink:"/nestjs-prisma-crud/access-control-module/access-control-module",editUrl:"https://github.com/kepelrs/nestjs-prisma-crud/edit/master/docs/docs/access-control-module/access-control-module.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Quickstart",permalink:"/nestjs-prisma-crud/access-control-module/overview"},next:{title:"AccessPolicy Decorator",permalink:"/nestjs-prisma-crud/access-control-module/access-policy"}},p=[{value:"Usage",id:"usage",children:[]},{value:"Configuration",id:"configuration",children:[{value:"opts.authDataKey",id:"optsauthdatakey",children:[]},{value:"opts.getRolesFromAuthDataFn",id:"optsgetrolesfromauthdatafn",children:[]},{value:"opts.strictMode",id:"optsstrictmode",children:[]}]}],u={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"module-registration"},"Module Registration"),(0,a.kt)("p",null,"Add ",(0,a.kt)("inlineCode",{parentName:"p"},".accessControl")," to your module registration to setup interceptors and other necessary logic for ",(0,a.kt)("a",{parentName:"p",href:"./access-policy"},"AccessPolicy")," to work."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=app.module.ts {7-11}",title:"app.module.ts","{7-11}":!0},"import { PrismaCrudModule } from 'nestjs-prisma-crud';\n\n@Module({\n    imports: [\n        PrismaCrudModule.register({\n            prismaService: PrismaService,\n            accessControl: {\n                authDataKey: 'user',\n                getRolesFromAuthDataFn: (authenticatedUser) => authenticatedUser?.roles,\n                strictMode: false,\n            },\n        }),\n    ],\n    // ...\n})\nexport class AppModule {}\n")),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},".accessControl")," property is a configuration object with the following shape:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface AccessPolicyInterceptorOpts {\n    authDataKey: string;\n    getRolesFromAuthDataFn: GetRolesFunction;\n    strictMode: boolean;\n}\n")),(0,a.kt)("p",null,"Below you can find the documentation for each option."),(0,a.kt)("h3",{id:"optsauthdatakey"},"opts.authDataKey"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Mandatory:")," Yes",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Description:")),(0,a.kt)("p",null,"The property of the ",(0,a.kt)("inlineCode",{parentName:"p"},"request")," where your authentication middleware stores the information about the user (we call that ",(0,a.kt)("inlineCode",{parentName:"p"},"authData"),") after verifying authentication (token/cookies/session)."),(0,a.kt)("p",null,"Common implementations typically use ",(0,a.kt)("inlineCode",{parentName:"p"},"'user'")," for this value (eg. ",(0,a.kt)("a",{parentName:"p",href:"https://docs.nestjs.com/security/authentication"},"Passport"),")"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"'authenticatedUser'")," ",(0,a.kt)("br",null),"\nThis would make ",(0,a.kt)("inlineCode",{parentName:"p"},"AccessControlModule")," search for the authentication data in the ",(0,a.kt)("inlineCode",{parentName:"p"},"request.authenticatedUser")," property."),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"optsgetrolesfromauthdatafn"},"opts.getRolesFromAuthDataFn"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"(authData) => string[] | number[] | Set<string> | Set<number>")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Mandatory:")," Yes",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Description:")),(0,a.kt)("p",null,"Method which takes the ",(0,a.kt)("inlineCode",{parentName:"p"},"request[opts.authDataKey]")," and returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"Set")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"Array")," containing the user roles ids."),(0,a.kt)("p",null,"These ids will later be compared with the ones passed to ",(0,a.kt)("inlineCode",{parentName:"p"},"@AccessPolicy"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"(user) => user?.roles.map(role => role.id)")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"optsstrictmode"},"opts.strictMode"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Mandatory:")," Yes",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Description:")),(0,a.kt)("p",null,"Strict mode helps you prevent accidentally forgetting to implement access control on sensitive routes. If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", routes that were not decorated with ",(0,a.kt)("inlineCode",{parentName:"p"},"@AccessPolicy")," will throw ",(0,a.kt)("inlineCode",{parentName:"p"},"501 Not Implemented")," errors."),(0,a.kt)("p",null,"If your app has non-CRUD endpoints, you can decorate them with ",(0,a.kt)("inlineCode",{parentName:"p"},"@AccessPolicy('everyone')"),". Alternatively, set ",(0,a.kt)("inlineCode",{parentName:"p"},"strictMode")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," if you wish to turn it off altogether."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Recommended:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"true")))}d.isMDXComponent=!0}}]);